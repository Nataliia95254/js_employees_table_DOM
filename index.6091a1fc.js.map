{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// import { pushNotification } from './notification.js';\n// Sort table\nvar sortButtons = document.querySelectorAll(\"thead tr th\");\nvar tbody = document.querySelector(\"tbody\");\nvar rows = Array.from(document.querySelectorAll(\"tbody tr\"));\nvar sortState = new Array(sortButtons.length).fill(false);\nsortButtons.forEach(function(button, index) {\n    button.addEventListener(\"click\", function() {\n        var isDescending = sortState[index];\n        var sortedRows = rows.sort(function(rowA, rowB) {\n            var cellA = rowA.children[index].innerHTML;\n            var cellB = rowB.children[index].innerHTML;\n            if (button.innerHTML === \"Name\" || button.innerHTML === \"Position\" || button.innerHTML === \"Office\") return isDescending ? cellB.localeCompare(cellA) : cellA.localeCompare(cellB);\n            else if (button.innerHTML === \"Salary\") {\n                var salaryA = parseFloat(cellA.replace(/[$,]/g, \"\"));\n                var salaryB = parseFloat(cellB.replace(/[$,]/g, \"\"));\n                return isDescending ? salaryB - salaryA : salaryA - salaryB;\n            } else return isDescending ? parseFloat(cellB) - parseFloat(cellA) : parseFloat(cellA) - parseFloat(cellB);\n        });\n        tbody.innerHTML = \"\";\n        sortedRows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n        sortState[index] = !sortState[index];\n    });\n});\n// Selected row\nrows.forEach(function(row) {\n    row.addEventListener(\"click\", function() {\n        rows.forEach(function(r) {\n            if (r !== row) r.classList.remove(\"active\");\n        });\n        row.classList.toggle(\"active\");\n    });\n});\n// notification\nvar pushNotification = function(posTop, posRight, title, description, type) {\n    var notification = document.createElement(\"div\");\n    document.body.append(notification);\n    notification.insertAdjacentHTML(\"afterbegin\", '\\n    <h2 class=\"title\">'.concat(title, '</h2>\\n    <p class=\"description\">').concat(description, \"</p>\\n    \"));\n    notification.setAttribute(\"class\", \"notification \".concat(type));\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.style.position = \"absolute\";\n    notification.style.top = posTop + \"px\";\n    notification.style.right = posRight + \"px\";\n    setTimeout(function() {\n        notification.style.visibility = \"hidden\";\n    }, 2000);\n};\n// Add new row\nvar nameInput = document.querySelector('input[data-qa=\"name\"]');\nvar positionInput = document.querySelector('input[data-qa=\"position\"]');\nvar officeSelect = document.querySelector('select[data-qa=\"office\"]');\nvar ageInput = document.querySelector('input[data-qa=\"age\"]');\nvar salaryInput = document.querySelector('input[data-qa=\"salary\"]');\nvar addButton = document.querySelector(\"form>button\");\naddButton.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    var isValid = true;\n    if (nameInput.value.length < 4) {\n        pushNotification(150, 10, \"Error message\", \"Name value is too short\", \"error\");\n        isValid = false;\n    }\n    if (+ageInput.value < 18 || +ageInput.value > 90) {\n        pushNotification(150, 10, \"Error message\", \"Age value is not valid\", \"error\");\n        isValid = false;\n    }\n    if (positionInput.value.length < 3) {\n        pushNotification(150, 10, \"Error message\", \"Position value is too short\", \"error\");\n        isValid = false;\n    }\n    var salaryValue = parseFloat(salaryInput.value);\n    if (isNaN(salaryValue) || salaryValue <= 0) {\n        pushNotification(150, 10, \"Error message\", \"Salary must be a valid number greater than 0\", \"error\");\n        isValid = false;\n    }\n    // Якщо є помилки, не додаємо новий рядок\n    if (!isValid) return;\n    // Якщо всі дані валідні, додаємо новий рядок\n    var newRow = document.createElement(\"tr\");\n    newRow.innerHTML = \"<td>\".concat(nameInput.value, \"</td>\\n                      <td>\").concat(positionInput.value, \"</td>\\n                      <td>\").concat(officeSelect.value, \"</td>\\n                      <td>\").concat(ageInput.value, \"</td>\\n                      <td>$\").concat(salaryValue.toLocaleString(\"en-US\", {\n        minimumFractionDigits: 0\n    }), \"</td>\");\n    tbody.appendChild(newRow);\n    pushNotification(150, 10, \"New employee added\", \"Table is updated\", \"success\");\n    // Очищення полів після додавання\n    nameInput.value = \"\";\n    positionInput.value = \"\";\n    officeSelect.value = \"\";\n    ageInput.value = \"\";\n    salaryInput.value = \"\";\n});\n\n//# sourceMappingURL=index.6091a1fc.js.map\n","'use strict';\n// import { pushNotification } from './notification.js';\n\n// Sort table\n\nconst sortButtons = document.querySelectorAll('thead tr th');\nconst tbody = document.querySelector('tbody');\nconst rows = Array.from(document.querySelectorAll('tbody tr'));\n\nconst sortState = new Array(sortButtons.length).fill(false);\n\nsortButtons.forEach((button, index) => {\n  button.addEventListener('click', () => {\n    const isDescending = sortState[index];\n\n    const sortedRows = rows.sort((rowA, rowB) => {\n      const cellA = rowA.children[index].innerHTML;\n      const cellB = rowB.children[index].innerHTML;\n\n      if (\n        button.innerHTML === 'Name' ||\n        button.innerHTML === 'Position' ||\n        button.innerHTML === 'Office'\n      ) {\n        return isDescending\n          ? cellB.localeCompare(cellA)\n          : cellA.localeCompare(cellB);\n      } else if (button.innerHTML === 'Salary') {\n        const salaryA = parseFloat(cellA.replace(/[$,]/g, ''));\n        const salaryB = parseFloat(cellB.replace(/[$,]/g, ''));\n\n        return isDescending ? salaryB - salaryA : salaryA - salaryB;\n      } else {\n        return isDescending\n          ? parseFloat(cellB) - parseFloat(cellA)\n          : parseFloat(cellA) - parseFloat(cellB);\n      }\n    });\n\n    tbody.innerHTML = '';\n    sortedRows.forEach((row) => tbody.appendChild(row));\n\n    sortState[index] = !sortState[index];\n  });\n});\n\n// Selected row\n\nrows.forEach((row) => {\n  row.addEventListener('click', () => {\n    rows.forEach((r) => {\n      if (r !== row) {\n        r.classList.remove('active');\n      }\n    });\n\n    row.classList.toggle('active');\n  });\n});\n\n// notification\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const notification = document.createElement('div');\n\n  document.body.append(notification);\n\n  notification.insertAdjacentHTML(\n    'afterbegin',\n    `\n    <h2 class=\"title\">${title}</h2>\n    <p class=\"description\">${description}</p>\n    `,\n  );\n\n  notification.setAttribute('class', `notification ${type}`);\n  notification.setAttribute('data-qa', `notification`);\n  notification.style.position = 'absolute';\n\n  notification.style.top = posTop + 'px';\n  notification.style.right = posRight + 'px';\n\n  setTimeout(() => {\n    notification.style.visibility = 'hidden';\n  }, 2000);\n};\n\n// Add new row\nconst nameInput = document.querySelector('input[data-qa=\"name\"]');\nconst positionInput = document.querySelector('input[data-qa=\"position\"]');\nconst officeSelect = document.querySelector('select[data-qa=\"office\"]');\nconst ageInput = document.querySelector('input[data-qa=\"age\"]');\nconst salaryInput = document.querySelector('input[data-qa=\"salary\"]');\n\nconst addButton = document.querySelector('form>button');\n\naddButton.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  let isValid = true;\n\n  if (nameInput.value.length < 4) {\n    pushNotification(\n      150,\n      10,\n      'Error message',\n      'Name value is too short',\n      'error',\n    );\n    isValid = false;\n  }\n\n  if (+ageInput.value < 18 || +ageInput.value > 90) {\n    pushNotification(\n      150,\n      10,\n      'Error message',\n      'Age value is not valid',\n      'error',\n    );\n    isValid = false;\n  }\n\n  if (positionInput.value.length < 3) {\n    pushNotification(\n      150,\n      10,\n      'Error message',\n      'Position value is too short',\n      'error',\n    );\n    isValid = false;\n  }\n\n  const salaryValue = parseFloat(salaryInput.value);\n\n  if (isNaN(salaryValue) || salaryValue <= 0) {\n    pushNotification(\n      150,\n      10,\n      'Error message',\n      'Salary must be a valid number greater than 0',\n      'error',\n    );\n    isValid = false;\n  }\n\n  // Якщо є помилки, не додаємо новий рядок\n  if (!isValid) {\n    return;\n  }\n\n  // Якщо всі дані валідні, додаємо новий рядок\n  const newRow = document.createElement('tr');\n\n  newRow.innerHTML = `<td>${nameInput.value}</td>\n                      <td>${positionInput.value}</td>\n                      <td>${officeSelect.value}</td>\n                      <td>${ageInput.value}</td>\n                      <td>$${salaryValue.toLocaleString('en-US', { minimumFractionDigits: 0 })}</td>`;\n\n  tbody.appendChild(newRow);\n\n  pushNotification(\n    150,\n    10,\n    'New employee added',\n    'Table is updated',\n    'success',\n  );\n\n  // Очищення полів після додавання\n  nameInput.value = '';\n  positionInput.value = '';\n  officeSelect.value = '';\n  ageInput.value = '';\n  salaryInput.value = '';\n});\n"],"names":["sortButtons","document","querySelectorAll","tbody","querySelector","rows","Array","from","sortState","length","fill","forEach","button","index","addEventListener","isDescending","sortedRows","sort","rowA","rowB","cellA","children","innerHTML","cellB","localeCompare","parseFloat","salaryA","replace","salaryB","row","appendChild","r","classList","remove","toggle","pushNotification","posTop","posRight","title","description","type","notification","createElement","body","append","insertAdjacentHTML","concat","setAttribute","style","position","top","right","setTimeout","visibility","nameInput","positionInput","officeSelect","ageInput","salaryInput","addButton","e","preventDefault","isValid","value","salaryValue","isNaN","newRow","toLocaleString","minimumFractionDigits"],"version":3,"file":"index.6091a1fc.js.map"}